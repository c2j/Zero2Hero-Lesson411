/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TokenImpl, TokenImplInterface } from "../../contracts/TokenImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argTotalSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600a81526020017f4149474320546f6b656e00000000000000000000000000000000000000000000815250600090816200004a919062000320565b506040518060400160405280600481526020017f41494743000000000000000000000000000000000000000000000000000000008152506001908162000091919062000320565b503480156200009f57600080fd5b5062000407565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012857607f821691505b6020821081036200013e576200013d620000e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000169565b620001b4868362000169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000201620001fb620001f584620001cc565b620001d6565b620001cc565b9050919050565b6000819050919050565b6200021d83620001e0565b620002356200022c8262000208565b84845462000176565b825550505050565b600090565b6200024c6200023d565b6200025981848462000212565b505050565b5b8181101562000281576200027560008262000242565b6001810190506200025f565b5050565b601f821115620002d0576200029a8162000144565b620002a58462000159565b81016020851015620002b5578190505b620002cd620002c48562000159565b8301826200025e565b50505b505050565b600082821c905092915050565b6000620002f560001984600802620002d5565b1980831691505092915050565b6000620003108383620002e2565b9150826002028217905092915050565b6200032b82620000a6565b67ffffffffffffffff811115620003475762000346620000b1565b5b6200035382546200010f565b6200036082828562000285565b600060209050601f83116001811462000398576000841562000383578287015190505b6200038f858262000302565b865550620003ff565b601f198416620003a88662000144565b60005b82811015620003d257848901518255600182019150602085019450602081019050620003ab565b86831015620003f25784890151620003ee601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b610d1980620004176000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461012257806395d89b4114610140578063a9059cbb1461015e578063fe4b84df1461017a578063ffa1ad741461019657610093565b806306fdde0314610098578063158ef93e146100b657806318160ddd146100d457806370a08231146100f2575b600080fd5b6100a06101b4565b6040516100ad9190610859565b60405180910390f35b6100be610242565b6040516100cb9190610896565b60405180910390f35b6100dc610255565b6040516100e991906108ca565b60405180910390f35b61010c60048036038101906101079190610948565b6102be565b60405161011991906108ca565b60405180910390f35b61012a610307565b6040516101379190610984565b60405180910390f35b61014861032d565b6040516101559190610859565b60405180910390f35b610178600480360381019061017391906109cb565b6103bb565b005b610194600480360381019061018f9190610a0b565b6105e4565b005b61019e6106f9565b6040516101ab91906108ca565b60405180910390f35b600080546101c190610a67565b80601f01602080910402602001604051908101604052809291908181526020018280546101ed90610a67565b801561023a5780601f1061020f5761010080835404028352916020019161023a565b820191906000526020600020905b81548152906001019060200180831161021d57829003601f168201915b505050505081565b600260009054906101000a900460ff1681565b600060036000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461033a90610a67565b80601f016020809104026020016040519081016040528092919081815260200182805461036690610a67565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b505050505081565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490610ae4565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290610b50565b60405180910390fd5b6104cf604051806060016040528060248152602001610cc0602491393384846106fe565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461051e9190610b9f565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105749190610bd3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d891906108ca565b60405180910390a35050565b600260009054906101000a900460ff1615610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90610c53565b60405180910390fd5b33600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060036000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260006101000a81548160ff02191690831515021790555050565b600281565b61079a848484846040516024016107189493929190610c73565b6040516020818303038152906040527f8ef3f399000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107a0565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108035780820151818401526020810190506107e8565b60008484015250505050565b6000601f19601f8301169050919050565b600061082b826107c9565b61083581856107d4565b93506108458185602086016107e5565b61084e8161080f565b840191505092915050565b600060208201905081810360008301526108738184610820565b905092915050565b60008115159050919050565b6108908161087b565b82525050565b60006020820190506108ab6000830184610887565b92915050565b6000819050919050565b6108c4816108b1565b82525050565b60006020820190506108df60008301846108bb565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610915826108ea565b9050919050565b6109258161090a565b811461093057600080fd5b50565b6000813590506109428161091c565b92915050565b60006020828403121561095e5761095d6108e5565b5b600061096c84828501610933565b91505092915050565b61097e8161090a565b82525050565b60006020820190506109996000830184610975565b92915050565b6109a8816108b1565b81146109b357600080fd5b50565b6000813590506109c58161099f565b92915050565b600080604083850312156109e2576109e16108e5565b5b60006109f085828601610933565b9250506020610a01858286016109b6565b9150509250929050565b600060208284031215610a2157610a206108e5565b5b6000610a2f848285016109b6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a7f57607f821691505b602082108103610a9257610a91610a38565b5b50919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000610ace6011836107d4565b9150610ad982610a98565b602082019050919050565b60006020820190508181036000830152610afd81610ac1565b9050919050565b7f436f756c64206e6f742062652073616d65206163636f756e7400000000000000600082015250565b6000610b3a6019836107d4565b9150610b4582610b04565b602082019050919050565b60006020820190508181036000830152610b6981610b2d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610baa826108b1565b9150610bb5836108b1565b9250828203905081811115610bcd57610bcc610b70565b5b92915050565b6000610bde826108b1565b9150610be9836108b1565b9250828201905080821115610c0157610c00610b70565b5b92915050565b7f4f6e6c7920696e697469616c697a65206f6e6365000000000000000000000000600082015250565b6000610c3d6014836107d4565b9150610c4882610c07565b602082019050919050565b60006020820190508181036000830152610c6c81610c30565b9050919050565b60006080820190508181036000830152610c8d8187610820565b9050610c9c6020830186610975565b610ca96040830185610975565b610cb660608301846108bb565b9594505050505056fe5472616e7366657272696e672066726f6d20257320746f20257320257320746f6b656e73a26469706673582212204fcee59b824964db161c204028a12cff571802a5f82c56e4eb8e1137acc21ae464736f6c63430008110033";

type TokenImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenImpl__factory extends ContractFactory {
  constructor(...args: TokenImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenImpl> {
    return super.deploy(overrides || {}) as Promise<TokenImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenImpl {
    return super.attach(address) as TokenImpl;
  }
  override connect(signer: Signer): TokenImpl__factory {
    return super.connect(signer) as TokenImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenImplInterface {
    return new utils.Interface(_abi) as TokenImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenImpl {
    return new Contract(address, _abi, signerOrProvider) as TokenImpl;
  }
}
